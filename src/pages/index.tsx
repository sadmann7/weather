import { getWeather } from "@/utils/query";
import { Inter } from "@next/font/google";
import { useQuery } from "@tanstack/react-query";
import Head from "next/head";
import { useState } from "react";
import { SubmitHandler, useForm } from "react-hook-form";

const inter = Inter({ subsets: ["latin"] });

type Inputs = {
  city: string;
};

const Home = () => {
  const [city, setCity] = useState("");
  const [unit, setUnit] = useState<"metric" | "imperial">("metric");
  const [iconSnippet, setIconSnippet] = useState("");

  const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.OPEN_WEATHER_API_KEY}&units=${unit}`;
  const iconURL = `http://openweathermap.org/img/wn/${iconSnippet}@2x.png`;

  // react-hook-form
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<Inputs>();
  const onSubmit: SubmitHandler<Inputs> = (data) => {
    setCity(data.city);
  };

  // fetch data using react-query
  const weatherQuery = useQuery(["weather"], () => getWeather(city), {
    refetchOnWindowFocus: false,
    retry: false,
    onSuccess: (data) => {
      setCity(data.name);
      // setIconSnippet(data.weather[0].icon);
    },
  });

  console.log(weatherQuery);

  return (
    <>
      <Head>
        <title>Weather</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="grid place-items-center min-h-screen">
        <form onSubmit={handleSubmit(onSubmit)}>
          <input
            type="text"
            placeholder="Enter city"
            {...register("city", { required: true })}
          />
        </form>
      </main>
    </>
  );
};

export default Home;
